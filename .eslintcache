[{"C:\\Users\\Yojan\\Desktop\\merng\\client\\src\\index.js":"1","C:\\Users\\Yojan\\Desktop\\merng\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Yojan\\Desktop\\merng\\client\\src\\App.js":"3","C:\\Users\\Yojan\\Desktop\\merng\\client\\src\\ApolloProvider.js":"4","C:\\Users\\Yojan\\Desktop\\merng\\client\\src\\pages\\Login.js":"5","C:\\Users\\Yojan\\Desktop\\merng\\client\\src\\pages\\Register.js":"6","C:\\Users\\Yojan\\Desktop\\merng\\client\\src\\pages\\Home.js":"7","C:\\Users\\Yojan\\Desktop\\merng\\client\\src\\components\\MenuBar.js":"8","C:\\Users\\Yojan\\Desktop\\merng\\client\\src\\components\\PostCard.js":"9","C:\\Users\\Yojan\\Desktop\\merng\\client\\src\\util\\hooks.js":"10","C:\\Users\\Yojan\\Desktop\\merng\\client\\src\\context\\auth.js":"11","C:\\Users\\Yojan\\Desktop\\merng\\client\\src\\util\\AuthRoute.js":"12","C:\\Users\\Yojan\\Desktop\\merng\\client\\src\\components\\PostForm.js":"13","C:\\Users\\Yojan\\Desktop\\merng\\client\\src\\util\\graphql.js":"14","C:\\Users\\Yojan\\Desktop\\merng\\client\\src\\components\\LikeButton.js":"15","C:\\Users\\Yojan\\Desktop\\merng\\client\\src\\pages\\SinglePost.js":"16","C:\\Users\\Yojan\\Desktop\\merng\\client\\src\\components\\DeleteButton.js":"17","C:\\Users\\Yojan\\Desktop\\merng\\client\\src\\util\\MyPopup.js":"18"},{"size":429,"mtime":1612193653360,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":936,"mtime":1612717601652,"results":"22","hashOfConfig":"20"},{"size":768,"mtime":1612470997074,"results":"23","hashOfConfig":"20"},{"size":2160,"mtime":1612386875797,"results":"24","hashOfConfig":"20"},{"size":2871,"mtime":1612386895055,"results":"25","hashOfConfig":"20"},{"size":1173,"mtime":1612633019594,"results":"26","hashOfConfig":"20"},{"size":1290,"mtime":1612388508420,"results":"27","hashOfConfig":"20"},{"size":1575,"mtime":1612717203591,"results":"28","hashOfConfig":"20"},{"size":447,"mtime":1612295174095,"results":"29","hashOfConfig":"20"},{"size":1356,"mtime":1612389146414,"results":"30","hashOfConfig":"20"},{"size":436,"mtime":1612389867310,"results":"31","hashOfConfig":"20"},{"size":1964,"mtime":1612719175651,"results":"32","hashOfConfig":"20"},{"size":253,"mtime":1612472758745,"results":"33","hashOfConfig":"20"},{"size":1493,"mtime":1612728830115,"results":"34","hashOfConfig":"20"},{"size":5158,"mtime":1612718573422,"results":"35","hashOfConfig":"20"},{"size":1900,"mtime":1612727952274,"results":"36","hashOfConfig":"20"},{"size":212,"mtime":1612716889325,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"g5ogrl",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\Yojan\\Desktop\\merng\\client\\src\\index.js",[],["78","79"],"C:\\Users\\Yojan\\Desktop\\merng\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Yojan\\Desktop\\merng\\client\\src\\App.js",[],"C:\\Users\\Yojan\\Desktop\\merng\\client\\src\\ApolloProvider.js",[],"C:\\Users\\Yojan\\Desktop\\merng\\client\\src\\pages\\Login.js",["80"],"import React, {useContext, useState} from 'react';\r\nimport {Button, Form} from 'semantic-ui-react'\r\nimport {useMutation} from '@apollo/react-hooks'\r\nimport gql from 'graphql-tag'\r\nimport { PromiseProvider } from 'mongoose';\r\n\r\nimport {AuthContext} from '../context/auth'\r\nimport {useForm} from '../util/hooks';\r\n\r\nfunction Login(props){\r\n    const context = useContext(AuthContext);\r\nconst [errors, setErrors] = useState({});\r\n\r\nconst{ onChange, onSubmit, values} = useForm(loginUserCallback,{\r\n    username: '',\r\n    password: ''\r\n});\r\n\r\nconst [loginUser, {loading}] = useMutation(LOGIN_USER, {\r\n    update(_,{data : {login : userData}}){\r\n        context.login(userData);\r\n        props.history.push('/');  \r\n    },\r\n    onError(err)\r\n    {\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values\r\n})\r\n\r\nfunction loginUserCallback(){\r\n    loginUser();\r\n}\r\n\r\nreturn(\r\n<div className=\"form-container\">\r\n    <Form onSubmit={onSubmit} noValidate className={loading ? 'loading' : ''}>\r\n        <h1>Login</h1>\r\n        <Form.Input label=\"Username\"\r\n        Placeholder=\"Username..\"\r\n        name=\"username\"\r\n        type=\"text\"\r\n        value={values.username}\r\n        error={errors.username ? true : false}\r\n        onChange = {onChange}\r\n        />\r\n\r\n<Form.Input label=\"Password\"\r\n        Placeholder=\"Password..\"\r\n        name=\"password\"\r\n        type=\"password\"\r\n        value={values.password}\r\n        error={errors.password ? true : false}\r\n        onChange = {onChange}\r\n        />\r\n\r\n    <Button type=\"submit\" primary>\r\n        Login\r\n    </Button>\r\n    </Form>\r\n    {Object.keys(errors).length > 0 && (\r\n        <div className=\"ui error message\">\r\n        <ul className=\"list\">\r\n            {Object.values(errors).map(value => (\r\n                <li key={value}> {value} </li>\r\n            ))}\r\n        </ul>\r\n    </div>\r\n    ) }\r\n</div>\r\n);\r\n}\r\n\r\nconst LOGIN_USER = gql`\r\nmutation login(\r\n    $username: String!\r\n    $password: String!\r\n){\r\n    login(\r\n            username: $username\r\n            password: $password\r\n    ){\r\n        id email username createdAt token\r\n    }\r\n}\r\n`\r\n\r\nexport default Login;","C:\\Users\\Yojan\\Desktop\\merng\\client\\src\\pages\\Register.js",["81"],"import React, {useContext, useState} from 'react';\r\nimport {Button, Form} from 'semantic-ui-react'\r\nimport {useMutation} from '@apollo/react-hooks'\r\nimport gql from 'graphql-tag'\r\nimport { PromiseProvider } from 'mongoose';\r\n\r\nimport {AuthContext} from '../context/auth'\r\nimport {useForm} from '../util/hooks'\r\n\r\nfunction Register(props){\r\nconst context = useContext(AuthContext);\r\nconst [errors, setErrors] = useState({});\r\n\r\nconst {onChange, onSubmit, values} = useForm(registerUser, {\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n});\r\n\r\nconst [addUser, {loading}] = useMutation(REGISTER_USER, {\r\n    update(_,{data : {register: userData}}){\r\n        context.login(userData);\r\n        props.history.push('/');\r\n    },\r\n    onError(err)\r\n    {\r\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n    },\r\n    variables: values\r\n});\r\n\r\nfunction registerUser()\r\n{\r\n    addUser();\r\n}\r\n\r\nreturn(\r\n<div className=\"form-container\">\r\n    <Form onSubmit={onSubmit} noValidate className={loading ? 'loading' : ''}>\r\n        <h1>Register</h1>\r\n        <Form.Input label=\"Username\"\r\n        Placeholder=\"Username..\"\r\n        name=\"username\"\r\n        type=\"text\"\r\n        value={values.username}\r\n        error={errors.username ? true : false}\r\n        onChange = {onChange}\r\n        />\r\n\r\n<Form.Input label=\"Email\"\r\n        Placeholder=\"Email..\"\r\n        name=\"email\"\r\n        type=\"email\"\r\n        value={values.email}\r\n        error={errors.email ? true : false}\r\n        onChange = {onChange}\r\n        />\r\n\r\n<Form.Input label=\"Password\"\r\n        Placeholder=\"Password..\"\r\n        name=\"password\"\r\n        type=\"password\"\r\n        value={values.password}\r\n        error={errors.password ? true : false}\r\n        onChange = {onChange}\r\n        />\r\n\r\n<Form.Input label=\"Confirm Password\"\r\n        Placeholder=\"Confirm Password..\"\r\n        name=\"confirmPassword\"\r\n        type=\"password\"\r\n        value={values.confirmPassword}\r\n        error={errors.confirmPassword ? true : false}\r\n        onChange = {onChange}\r\n        />\r\n    <Button type=\"submit\" primary>\r\n        Register\r\n    </Button>\r\n    </Form>\r\n    {Object.keys(errors).length > 0 && (\r\n        <div className=\"ui error message\">\r\n        <ul className=\"list\">\r\n            {Object.values(errors).map(value => (\r\n                <li key={value}> {value} </li>\r\n            ))}\r\n        </ul>\r\n    </div>\r\n    ) }\r\n</div>\r\n);\r\n}\r\n\r\nconst REGISTER_USER = gql`\r\nmutation register(\r\n    $username: String!\r\n    $email: String!\r\n    $password: String!\r\n    $confirmPassword: String!\r\n){\r\n    register(\r\n        registerInput: {\r\n            username: $username\r\n            email: $email\r\n            password: $password\r\n            confirmPassword: $confirmPassword\r\n        }\r\n    ){\r\n        id email username createdAt token\r\n    }\r\n}\r\n`\r\n\r\nexport default Register;","C:\\Users\\Yojan\\Desktop\\merng\\client\\src\\pages\\Home.js",[],"C:\\Users\\Yojan\\Desktop\\merng\\client\\src\\components\\MenuBar.js",[],"C:\\Users\\Yojan\\Desktop\\merng\\client\\src\\components\\PostCard.js",[],"C:\\Users\\Yojan\\Desktop\\merng\\client\\src\\util\\hooks.js",[],"C:\\Users\\Yojan\\Desktop\\merng\\client\\src\\context\\auth.js",[],"C:\\Users\\Yojan\\Desktop\\merng\\client\\src\\util\\AuthRoute.js",[],"C:\\Users\\Yojan\\Desktop\\merng\\client\\src\\components\\PostForm.js",[],"C:\\Users\\Yojan\\Desktop\\merng\\client\\src\\util\\graphql.js",[],"C:\\Users\\Yojan\\Desktop\\merng\\client\\src\\components\\LikeButton.js",[],"C:\\Users\\Yojan\\Desktop\\merng\\client\\src\\pages\\SinglePost.js",["82"],"import React, { useContext, useState, useRef } from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\nimport moment from 'moment';\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  Grid,\r\n  Image,\r\n  Icon,\r\n  Label\r\n} from 'semantic-ui-react';\r\n\r\nimport { AuthContext } from '../context/auth';\r\nimport LikeButton from '../components/LikeButton';\r\nimport DeleteButton from '../components/DeleteButton';\r\nimport MyPopup from '../util/MyPopup';\r\n\r\nfunction SinglePost(props) {\r\n  const postId = props.match.params.postId;\r\n  const { user } = useContext(AuthContext);\r\n  const commentInputRef = useRef(null);\r\n\r\n  const [comment, setComment] = useState('');\r\n\r\n  const { loading, data: { getPost } = {} } = useQuery(FETCH_POST_QUERY, {variables: {postId}});\r\n\r\n  const [submitComment] = useMutation(SUBMIT_COMMENT_MUTATION, {\r\n    update() {\r\n      setComment('');\r\n      commentInputRef.current.blur();\r\n    },\r\n    variables: {\r\n      postId,\r\n      body: comment\r\n    }\r\n  });\r\n\r\n  function deletePostCallback() {\r\n    props.history.push('/');\r\n  }\r\n\r\n  let postMarkup;\r\n  if (!getPost) {\r\n    postMarkup = <p>Loading post..</p>;\r\n  } else {\r\n    const {\r\n      id,\r\n      body,\r\n      createdAt,\r\n      username,\r\n      comments,\r\n      likes,\r\n      likeCount,\r\n      commentCount\r\n    } = getPost;\r\n\r\n    postMarkup = (\r\n      <Grid>\r\n        <Grid.Row>\r\n          <Grid.Column width={2}>\r\n            <Image\r\n              src=\"https://react.semantic-ui.com/images/avatar/large/molly.png\"\r\n              size=\"small\"\r\n              float=\"right\"\r\n            />\r\n          </Grid.Column>\r\n          <Grid.Column width={10}>\r\n            <Card fluid>\r\n              <Card.Content>\r\n                <Card.Header>{username}</Card.Header>\r\n                <Card.Meta>{moment(createdAt).fromNow()}</Card.Meta>\r\n                <Card.Description>{body}</Card.Description>\r\n              </Card.Content>\r\n              <hr />\r\n              <Card.Content extra>\r\n                <LikeButton user={user} post={{ id, likeCount, likes }} />\r\n                <MyPopup content=\"Comment on post\">\r\n                  <Button\r\n                    as=\"div\"\r\n                    labelPosition=\"right\"\r\n                    onClick={() => console.log('Comment on post')}\r\n                  >\r\n                    <Button basic color=\"blue\">\r\n                      <Icon name=\"comments\" />\r\n                    </Button>\r\n                    <Label basic color=\"blue\" pointing=\"left\">\r\n                      {commentCount}\r\n                    </Label>\r\n                  </Button>\r\n                </MyPopup>\r\n                {user && user.username === username && (\r\n                  <DeleteButton postId={id} callback={deletePostCallback} />\r\n                )}\r\n              </Card.Content>\r\n            </Card>\r\n            {user && (\r\n              <Card fluid>\r\n                <Card.Content>\r\n                  <p>Post a comment</p>\r\n                  <Form>\r\n                    <div className=\"ui action input fluid\">\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Comment..\"\r\n                        name=\"comment\"\r\n                        value={comment}\r\n                        onChange={(event) => setComment(event.target.value)}\r\n                        ref={commentInputRef}\r\n                      />\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"ui button teal\"\r\n                        disabled={comment.trim() === ''}\r\n                        onClick={submitComment}\r\n                      >\r\n                        Submit\r\n                      </button>\r\n                    </div>\r\n                  </Form>\r\n                </Card.Content>\r\n              </Card>\r\n            )}\r\n            {comments.map((comment) => (\r\n              <Card fluid key={comment.id}>\r\n                <Card.Content>\r\n                  {user && user.username === comment.username && (\r\n                    <DeleteButton postId={id} commentId={comment.id} />\r\n                  )}\r\n                  <Card.Header>{comment.username}</Card.Header>\r\n                  <Card.Meta>{moment(comment.createdAt).fromNow()}</Card.Meta>\r\n                  <Card.Description>{comment.body}</Card.Description>\r\n                </Card.Content>\r\n              </Card>\r\n            ))}\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    );\r\n  }\r\n  return postMarkup;\r\n}\r\n\r\nconst SUBMIT_COMMENT_MUTATION = gql`\r\n  mutation($postId: String!, $body: String!) {\r\n    createComment(postId: $postId, body: $body) {\r\n      id\r\n      comments {\r\n        id\r\n        body\r\n        createdAt\r\n        username\r\n      }\r\n      commentCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst FETCH_POST_QUERY = gql`\r\n  query($postId: ID!) {\r\n    getPost(postId: $postId) {\r\n      id\r\n      body\r\n      createdAt\r\n      username\r\n      likeCount\r\n      likes {\r\n        username\r\n      }\r\n      commentCount\r\n      comments {\r\n        id\r\n        username\r\n        createdAt\r\n        body\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SinglePost;","C:\\Users\\Yojan\\Desktop\\merng\\client\\src\\components\\DeleteButton.js",["83"],"C:\\Users\\Yojan\\Desktop\\merng\\client\\src\\util\\MyPopup.js",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":5,"column":10,"nodeType":"90","messageId":"91","endLine":5,"endColumn":25},{"ruleId":"88","severity":1,"message":"89","line":5,"column":10,"nodeType":"90","messageId":"91","endLine":5,"endColumn":25},{"ruleId":"88","severity":1,"message":"92","line":27,"column":11,"nodeType":"90","messageId":"91","endLine":27,"endColumn":18},{"ruleId":"88","severity":1,"message":"93","line":4,"column":33,"nodeType":"90","messageId":"91","endLine":4,"endColumn":38},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'PromiseProvider' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'Popup' is defined but never used.","no-global-assign","no-unsafe-negation"]